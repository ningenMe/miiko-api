syntax = "proto3";

package miiko.v1;

option go_package = "github.com/ningenMe/miiko-api/proto/gen_go/v1;miikov1";

service MiikoService {
  rpc CategoryListGet (CategoryListGetRequest) returns (CategoryListGetResponse) {}
  rpc CategoryPost (CategoryPostRequest) returns (CategoryPostResponse) {}
  rpc TopicListGet (TopicListGetRequest) returns (TopicListGetResponse) {}
  rpc TopicGet (TopicGetRequest) returns (TopicGetResponse) {}
  rpc TopicPost (TopicPostRequest) returns (TopicPostResponse) {}
  rpc ProblemListGet (ProblemListGetRequest) returns (ProblemListGetResponse) {}
  rpc ProblemGet (ProblemGetRequest) returns (ProblemGetResponse) {}
  rpc ProblemPost (ProblemPostRequest) returns (ProblemPostResponse) {}
}
message Category {
  string category_id = 1;
  string category_display_name = 2;
  string category_system_name = 3;
  int32 category_order = 4;
  int32 topic_size = 5;
  int32 problem_size = 6;
  repeated Topic topic_list = 7;
}
message Topic {
  string topic_id = 1;
  string topic_display_name = 2;
  int32 topic_order = 3;
  string topic_text = 4;
  repeated Problem problem_list = 5;
  repeated Reference reference_list = 6;
}
message Reference {
  string reference_id = 1;
  string url = 2;
  string reference_display_name = 3;
}
message Problem {
  string problem_id = 1;
  string url = 2;
  string problem_display_name = 3;
  int32 estimation = 4;
  repeated Tag tag_list = 5;
}
message Tag {
  string category_id = 1;
  string topic_id = 2;
  string topic_display_name = 3;
}

// req/res
message CategoryListGetRequest {
  bool is_required_topic = 1;
}
message CategoryListGetResponse {
  repeated Category category_list = 1;
}
message CategoryPostRequest {
  string category_id = 1;
  Category category = 2;
}
message CategoryPostResponse {
  string category_id = 1;
}
message TopicListGetRequest {
  string category_system_name = 1;
}
message TopicListGetResponse {
  Category category = 1;
  repeated Topic topic_list = 2;
}
message TopicPostRequest {
  string topic_id = 1;
  Topic topic = 2;
  string category_id = 3;
}
message TopicPostResponse {
  string topic_id = 1;
}
message ProblemListGetRequest {
  int32 offset = 1;
  int32 limit = 2;
  enum SortType {
    SORT_TYPE_UNSPECIFIED = 0;
    SORT_TYPE_CREATED_TIME = 1;
    SORT_TYPE_ESTIMATION = 2;
  }
  SortType sort_type = 3;
}
message ProblemListGetResponse {
  repeated Problem problem_list = 1;
}
message ProblemGetRequest {
  string problem_id = 1;
}
message ProblemGetResponse {
  Problem problem = 1;
}
message ProblemPostRequest {
  string problem_id = 1;
  Problem problem = 2;
}
message ProblemPostResponse {
  string problem_id = 1;
}
message TopicGetRequest {
  string topic_id = 1;
}
message TopicGetResponse {
  Category category = 1;
  Topic topic = 2;
}
